#!/bin/sh

#you must have a githubteacher token
#saved to your ENV variables in order to use this script
access_token=$GITHUBTEACHER_TOKEN
collabrepo=$1

#test array content
function containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
  return 0
}

function getstudents () {
  for i in ${collabs[@]}
  do
    if
      containsElement $i $ownersArray
    then
      createStudentFile $i
    fi
  done
  checkrepo
}

function createStudentFile () {
  student=$1
  student=$(echo "$student" | (sed -e 's/^"//' -e 's/"$//'))
  echo "---" > caption-activity-$student.yml
  echo "githubHandle: $student" >> caption-activity-$student.yml
}

function checkrepo () {
  #iterate through the PRs and find out who authored each one
  for i in ${pullsNumbers[@]}
  do
    #give credit to the author
    prAuthor=$(curl -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/pulls/$i | jq .user.login)
    if
      containsElement $prAuthor $ownersArray
    then
      prAuthor=$(echo "$prAuthor" | (sed -e 's/^"//' -e 's/"$//'))
      echo "prAuth: https://github.com/githubschool/$collabrepo/pull/$i" >> caption-activity-$prAuthor.yml
    fi
    #get authors of reviews on this PR
    reviewAuth=$(curl -H "Accept: application/vnd.github.v3+json" -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/pulls/$i/reviews | jq '.[] | .user.login')
    #iterate through reviewers and give credit
    for z in ${reviewAuth[@]}
    do
      #give credit to the author
      if
        containsElement $z $ownersArray
      then
        z=$(echo "$z" | (sed -e 's/^"//' -e 's/"$//'))
        echo "reviewAuth: https://github.com/githubschool/$collabrepo/pull/$i" >> caption-activity-$z.yml
      fi
    done
  done
  sendfiles
}

function sendfiles () {
  for i in ${collabs[@]}
  do
    if
      containsElement $i $ownersArray
    then
      i=$(echo "$i" | (sed -e 's/^"//' -e 's/"$//'))
      echo "---" >> caption-activity-$i.yml
      #send graded file to original class repo
      #first, encode file as base64
      newfile=$(cat caption-activity-$i.yml | base64)
      #does the file already exist?
      status=$(curl -i -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/contents/_grades/caption-activity-$i.yml | grep "^Status:")
      if echo "$status" | grep -iq "404" ;
      then
        #create the file on the repo
        curl -i -u "githubteacher:$access_token" -d "{ \"path\": \"_grades/caption-activity-$i.yml\", \"message\": \"Graded caption activity for $i\", \"content\": \"$newfile\"}" -X PUT https://api.github.com/repos/githubschool/$collabrepo/contents/_grades/caption-activity-$i.yml
      else
        #get the sha
        sha=$(curl -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/contents/_grades/caption-activity-$i.yml | jq .sha)
        echo "Replacing the file at sha: $sha"
        #replace the file
        curl -i -u "githubteacher:$access_token" -d "{ \"path\": \"_grades/caption-activity-$i.yml\", \"message\": \"Graded caption activity for $i\", \"content\": \"$newfile\", \"sha\": $sha}" -X PUT https://api.github.com/repos/githubschool/$collabrepo/contents/_grades/caption-activity-$i.yml
      fi
      #and delete the temporary grading file
      rm caption-activity-$i.yml
    fi
  done
}

#get name of collaborators from day 1
collabs=$(curl -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/collaborators?per_page=100 | jq '.[] | .login')
ownersArray=$(curl -u "githubteacher:$access_token" -X GET https://api.github.com/orgs/githubschool/members?role=admin | jq '.[] | .login')
pullsNumbers=$(curl -u "githubteacher:$access_token" -X GET https://api.github.com/repos/githubschool/$collabrepo/pulls?per_page=100 | jq '.[] | .number')
getstudents
