#!/bin/sh

#you must have a githubteacher token
#saved to your ENV variables in order to use this script
collabrepo=$1

#test array content
function containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 1; done
  return 0
}

#get the names of the people who need a file
function getnames () {
  #get names of people who have commented on the issue
  counter=2
  for i in ${commenters[@]}
  do
    if
      containsElement $i $collabs
    then
      i=$(echo "$i" | (sed -e 's/^"//' -e 's/"$//'))
      addcollab $i
      createFile $i $counter
    else
      echo "Skipping $i because they are already a collaborator."
    fi
    ((counter++))
  done
  createissue $counter
}

function addcollab () {
  student=$1
  #student=$(echo "$student" | (sed -e 's/^"//' -e 's/"$//'))
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X PUT https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/collaborators/$student
}

function createFile () {
  student=$1
  #student=$(echo "$student" | (sed -e 's/^"//' -e 's/"$//'))
  counter=$2
  if [ $counter -le 9 ]
  then
    filenum=0$counter
  else
    filenum=$counter
  fi
  echo "Time to create file 0000-01-$filenum-$student.md in $collabrepo"
  echo "---" > 0000-01-$filenum-$student.md
  echo "layout: slide" >> 0000-01-$filenum-$student.md
  echo 'title: "Welcome to our slide deck!"' >> 0000-01-$filenum-$student.md
  echo "---" >> 0000-01-$filenum-$student.md
  echo "" >> 0000-01-$filenum-$student.md
  memes=("![angry-cat](https://cloud.githubusercontent.com/assets/16547949/25400569/064d7bc6-29c1-11e7-90dc-fef44edd9f0a.jpg)"  "![bad-luck-brian](https://cloud.githubusercontent.com/assets/16547949/25400743/8ae447a2-29c1-11e7-9839-5438d8fcda7b.jpg)"  "![chill-out-lemur](https://cloud.githubusercontent.com/assets/16547949/25400761/9c64ee82-29c1-11e7-8ad3-6886f97634b9.jpg)"  "![dr-evil](https://cloud.githubusercontent.com/assets/16547949/25400776/a776de7a-29c1-11e7-959e-bbad827c2aab.jpg)"  "![evil-raccooon](https://cloud.githubusercontent.com/assets/16547949/25400793/b1104eee-29c1-11e7-89e2-3c99f9ea1941.jpg)"  "![evil-toddler](https://cloud.githubusercontent.com/assets/16547949/25400815/c5847ecc-29c1-11e7-9c5d-05d4a6726545.jpg)"  "![first-day-on-the-internet](https://cloud.githubusercontent.com/assets/16547949/25400874/eca2ebce-29c1-11e7-969d-de87b82a7061.jpg)"  "![fist-bump-puppy](https://cloud.githubusercontent.com/assets/16547949/25400830/d1cd1bb2-29c1-11e7-82bd-27d847701c59.jpg)"  "![fresh-prince](https://cloud.githubusercontent.com/assets/16547949/25400882/f44a7464-29c1-11e7-8f45-327d67cb961a.jpg)"  "![fry](https://cloud.githubusercontent.com/assets/16547949/25400891/fb18941a-29c1-11e7-82b9-35e589443a60.jpg)"  "![homer-agh](https://cloud.githubusercontent.com/assets/16547949/25400895/02672eca-29c2-11e7-87a5-3dc3d3110c29.jpg)"  "![homer-hide](https://cloud.githubusercontent.com/assets/16547949/25400902/0a553f14-29c2-11e7-9a40-8d14136b4fa3.jpg)"  "![humpday](https://cloud.githubusercontent.com/assets/16547949/25400910/10641d9e-29c2-11e7-80c8-5c38ea261b22.jpg)" "![leia](https://cloud.githubusercontent.com/assets/16547949/25400918/17c5d2e4-29c2-11e7-92ef-79bacb424ef4.jpg)" "![luke](https://cloud.githubusercontent.com/assets/16547949/25400950/3a263b30-29c2-11e7-8f09-02127726c1e1.jpg)" "![morpheus](https://cloud.githubusercontent.com/assets/16547949/25400958/410316ee-29c2-11e7-9e6d-9d13999e76e3.jpg)" "![most-interesting-man](https://cloud.githubusercontent.com/assets/16547949/25400967/47a9dd52-29c2-11e7-9623-e913672a3eec.jpg)" "![obama](https://cloud.githubusercontent.com/assets/16547949/25400972/4de67090-29c2-11e7-96a6-8631407b6e4f.jpg)" "![one-does-not-simply](https://cloud.githubusercontent.com/assets/16547949/25400982/542b10d2-29c2-11e7-9cd6-f0d07042f1d2.jpg)" "![paddling](https://cloud.githubusercontent.com/assets/16547949/25400987/5bb3c4e8-29c2-11e7-9616-5c9afe759173.jpg)" "![panda-birthday](https://cloud.githubusercontent.com/assets/16547949/25400994/60f64804-29c2-11e7-8a6d-4401d7d294b9.jpg)" "![philosoraptor](https://cloud.githubusercontent.com/assets/16547949/25401001/66d677c6-29c2-11e7-9b12-263e036c236e.jpg)" "![picard-facepalm](https://cloud.githubusercontent.com/assets/16547949/25401008/6f0a5f0c-29c2-11e7-8ade-705cc5e57333.jpg)" "![puss-in-boots](https://cloud.githubusercontent.com/assets/16547949/25401020/740dd682-29c2-11e7-9906-ac5c3a8496c7.jpg)" "![sad-puppy](https://cloud.githubusercontent.com/assets/16547949/25401096/b9e619ee-29c2-11e7-8ee3-74a301737d34.jpg)" "![skeletor-victory](https://cloud.githubusercontent.com/assets/16547949/25401162/f580fadc-29c2-11e7-99c2-0c6cfb5dd1cd.jpg)" "![spongebob-rainbow](https://cloud.githubusercontent.com/assets/16547949/25401179/038f12ee-29c3-11e7-8362-f92422b7da35.jpg)" "![steve-harvey](https://cloud.githubusercontent.com/assets/16547949/25401187/0af0e288-29c3-11e7-9a88-38efd8b375cc.jpg)" "![success-kid](https://cloud.githubusercontent.com/assets/16547949/25401204/136e768c-29c3-11e7-8a7b-8724fee13dd7.jpg)" "![willy-wonka](https://cloud.githubusercontent.com/assets/16547949/25401209/19a78926-29c3-11e7-9dd5-6ccc07e38f54.jpg)" "![winter-is-coming](https://cloud.githubusercontent.com/assets/16547949/25401218/203cc85a-29c3-11e7-8bbf-8c7d4a6b81b2.jpg)" "![yoda](https://cloud.githubusercontent.com/assets/16547949/25401233/2c9215d8-29c3-11e7-9e9b-d7cbccefb17a.jpg)" )
  randomeme=${memes[$RANDOM % ${#memes[@]} ]}
  echo "$randomeme" >> 0000-01-$filenum-$student.md
  echo "{: .center}" >> 0000-01-$filenum-$student.md
  echo "" >> 0000-01-$filenum-$student.md
  echo "Caption here" >> 0000-01-$filenum-$student.md
  newfile=$(cat 0000-01-$filenum-$student.md | base64)
  #now create the file on the repo
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"path\": \"_posts/0000-01-$filenum-$student.md\", \"message\": \"Activity file for $student\", \"content\": \"$newfile\"}" -X PUT https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/contents/_posts/0000-01-$filenum-$student.md
  rm 0000-01-$filenum-$student.md
}

function createissue () {
  counter=$1
  #is there already an issue?
  issues=$(curl -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X GET https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues | jq '.[] | {issueNum: .number, issueTitle: .title}')
  #create the body of the issue comment
  temptext="Using the API, I have just created a file with a random meme for you to caption. In this activity, we will learn how to make changes to files in our GitHub repository.\n\n"
  for i in ${commenters[@]}
  do
    student=$(echo "$i" | (sed -e 's/^"//' -e 's/"$//'))
    temptext=$temptext"- [ ] @$student\n"
  done
  echo "Here is the issue text: $temptext"
  #decide whether to post or patch
  if echo "$issues" | grep -iq "Activity 1"
  then
    #get the issue number
    echo "Please point me to the correct issue"
    echo "To update the list of students (just type the number)"
    echo $issues
    read captionIssue
    curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"body\": \"$temptext\"}" -X PATCH https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues/$captionIssue/comments/1
  else
    #create a new issue
    curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Activity 1: Your First Caption\", \"body\": \"$temptext\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
    firstrun $counter
  fi
}

function firstrun () {
  counter=$1
  #create extended activity issues
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Add A New Slide\", \"body\": \"## We Need More Slides\nGrab another meme and create a new slide from scratch.\n If you need help, check out the Appendix in the training manual.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Add a Caption To an Existing Slide\", \"body\": \"## Can you think of a better caption?\nEach slide can have more than one caption. Check out the current slide show and add a caption (or two).\n If you need help, check out the Appendix in the training manual.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Improve the README\", \"body\": \"## Do you have a favorite Git Resource?\nAdd it to the README!\n If you need help, check out the Appendix in the training manual.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Restyle the Slides\", \"body\": \"## Do you have an eye for design?\nHelp us improve the look of the slide deck.\n If you need help, check out the Appendix in the training manual.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
  #create a file for $TOKEN_OWNER
  createFile $TOKEN_OWNER $counter
  makeprivate
}

function makeprivate () {
  #is the repo already private?
  repostatus=$(curl -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X GET https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo | jq .private)
  if $repostatus
  then
    echo "This repo is already private."
  else
    echo "Are you ready to make this repo private? Y or N"
    read flipswitch
    if echo "$flipswitch" | grep -iq "^y" ;
    then
      #switch repo to private
      curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"name\": \"$collabrepo\", \"private\": true}" -X PATCH https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo
      #ask about adding 1:1s
      echo "Does this class get 1:1 sessions? Y or N"
      read oneonone
      if echo "$oneonone" | grep -iq "^y" ;
      then
        createoneonones
      fi
    else
      echo "Ok, just remember to change the repo to private"
      echo "and add the info for booking 1:1 appointments to the README."
    fi
  fi
}

function createoneonones () {
  #create an issue for 1:1 appointments
  isstext="As part of this class, you will have the opportunity to book one-on-one time with a member of our training team to ask questions, review specific class topics, or get help with a scenario. Each student can book one appointment using the following link: $APPT_URL\n\nThese appointments will be available for 4 weeks after the end of this class.\n\nFYI: "
  for i in ${commenters[@]}
  do
    i=$(echo "$i" | (sed -e 's/^"//' -e 's/"$//'))
    isstext=$isstext"@$i "
  done
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Booking 1:1 Appointments\", \"body\": \"$isstext\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues
}

collabs=$(curl -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X GET https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/collaborators?per_page=100 | jq '.[] | .login')
commenters=$(curl -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X GET https://$INSTANCE_URL/repos/$CLASS_ORG/$collabrepo/issues/1/comments?per_page=100 | jq '.[] | .user.login')
getnames
