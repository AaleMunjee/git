#!/bin/sh

#you must have a githubteacher token
#saved to your ENV variables in order to use this script
reponame=$1

#get details for the README
function getdetails () {
  echo "Let's add the class details to the README:"
  echo "When is this amazing class?"
  echo "Example: March 10 - 11, 2017."
  read classdate
  echo "Who is teaching? Without the @."
  read teacher
  echo "Who is the buddy? Without the @."
  read buddy
  echo "Create a unique name for the survey collector."
  echo "Example: 2017-06-06-open-enrollment."
  read surveyName
  #create the repository on $INSTANCE_URL
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"name\": \"$reponame\", \"description\": \"Let's learn about Git and GitHub\", \"private\": false, \"has_issues\": true, \"has_wiki\": true, \"has_downloads\": true, \"gitignore_template\": \"Jekyll\", \"license_template\": \"cc-by-4.0\"}" -X POST https://$INSTANCE_URL/orgs/$CLASS_ORG/repos
  echo "Resting 5 more seconds to allow repo creation to resolve"
  sleep 5
  #add the facilitator and buddy as collaborators
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X PUT https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/collaborators/$teacher
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X PUT https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/collaborators/$buddy
  #generate the survey link
  surveyLink=$((curl --request PUT --url "https://restapi.surveygizmo.com/v5/survey/$SURVEY_CAMPAIGN/surveycampaign?api_token=$SURVEY_TOKEN&api_token_secret=$SURVEY_SECRET&_method=PUT&type=link&name=$surveyName" | jq .data.uri) | (sed -e 's/^"//' -e 's/"$//'))
  #append teacher and class type to survey link
  longLink=$surveyLink"?type=developers&teacher="$teacher
  #create a google short link
  shortLink=$((curl https://www.googleapis.com/urlshortener/v1/url?key=AIzaSyA-eIC_TChnov4pZYaTmRatjYb1KVLJ8FU -H 'Content-Type: application/json' -d "{\"longUrl\": \"$longLink\"}" | jq .id) | (sed -e 's/^"//' -e 's/"$//'))
  #create the repo locally
  git clone https://$TOKEN_OWNER:$GITHUBTEACHER_TOKEN@$INSTANCE_URL/$CLASS_ORG/$reponame.git
  pushd $reponame
  git config user.name "$TOKEN_OWNER"
  githubemail=$((curl -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X GET https://$INSTANCE_URL/users/$TOKEN_OWNER | jq .email) | (sed -e 's/^"//' -e 's/"$//'))
  git config user.email "$githubemail"
  cp ../docs/templates/class-readme.md README.md
  sed -i "" "s/THIS-DATE/$classdate/g" README.md
  sed -i "" "s/TEACHER-HANDLE/$teacher/g" README.md
  sed -i "" "s/BUDDY-HANDLE/$buddy/g" README.md
  sed -i "" "s|SURVEY-LINK|$shortLink|g" README.md
  git add README.md
  git commit -m "create class README"
  pushAttempt="$(git push -u origin master 2>&1)"
  echo "Output of $pushAttempt"
  if echo "$pushAttempt" | grep -iq "rejected" ; then
    echo "Uh oh, it looks like your push was rejected."
    echo "Do you want me to overwrite it? Y or N"
    read tryForce
    if echo "$tryForce" | grep -iq "^y" ;
    then
      git push -f -u origin master
    else
      echo "Ok, you will need to add the README on your own."
    fi
  fi
  git config --local --unset user.name
  git config --local --unset user.email
  popd
  rm -rf $reponame
  prettyrepo $reponame
}

function prettyrepo () {
  reponame=$1
  #delete labels other than question, duplicate and help wanted
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/bug
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/enhancement
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/invalid
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -X DELETE https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/labels/wontfix
  #open the issue to be added as a collaborator
  curl -i -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"title\": \"Comment here to be added as a collaborator\", \"body\": \"### Comment below - you can say anything \n We will all be using this repository today. Even though it's public, you will not be able to make changes until you're given the correct permissions. We've automated this process via the GitHub API and some fancy chatops. Once you comment, you'll be added as a collaborator. \n\n  You'll also start to receive a lot of emails. (:exclamation:) You can slow these down immediately by clicking the 'unsubscribe' button.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/issues
  #add a project to the repo and grab the project id
  projID=$(curl -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"name\": \"Class Activity: Hometown Recommendations?\", \"body\": \"Each student will create a file with recommendations for their town.\"}" -X POST https://$INSTANCE_URL/repos/$CLASS_ORG/$reponame/projects | jq .id)
  #add two columns
  columnOne=$(curl -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"name\": \"Add Hometown File\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns | jq .id)
  columnTwo=$(curl -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"name\": \"Add Details to Files\"}" -X POST https://$INSTANCE_URL/projects/$projID/columns | jq .id)
  #add card to each column
  curl -i -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"note\": \"Each student will create a .md file to represent their hometown.\"}" -X POST https://$INSTANCE_URL/projects/columns/$columnOne/cards
  curl -i -H "Accept: application/vnd.github.inertia-preview+json" -u "$TOKEN_OWNER:$GITHUBTEACHER_TOKEN" -d "{ \"note\": \"Add information on things to do and places to eat in your hometown.\"}" -X POST https://$INSTANCE_URL/projects/columns/$columnTwo/cards
}

getdetails
