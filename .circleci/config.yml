defaults: &defaults
  working_directory: ~/training-manual
  docker:
    - image: circleci/ruby:2.3-node

version: 2.0

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "Gemfile.lock" }}
            - dependency-cache-
      - run: script/setup
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install calibre
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: dependency-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - ./.bundle
            - ./vendor/gems
      - run: npm run docs:prepare # gitbook install
      # build the books
      - run: script/cibuild fullcicdtravis
      - run: script/cibuild onlycicdtravis
      - run: script/cibuild fullcicdcircle
      - run: script/cibuild onlycicdcircle
      - run: script/cibuild GH4D
      - run: script/cibuild GH4M
      # persist the books for deployment
      - persist_to_workspace:
          root: ~/training-manual
          paths:
            - ./*.pdf
            - ./fullcicdtravis/
            - ./onlycicdtravis/
            - ./fullcicdcircle/
            - ./onlycicdcircle/
            - ./GH4D/
            - ./GH4M/

  deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "Gemfile.lock" }}
            - dependency-cache-
      - run: script/setup
      - attach_workspace:
          at: ./
      - run: script/deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - build
